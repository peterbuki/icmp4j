import org.gradle.internal.os.OperatingSystem;
allprojects {
    apply plugin: 'java'
}

sourceCompatibility = 1.8
version = '1.0'
jar {
    manifest {
        attributes 'Implementation-Title': 'Icmp4j',
                   'Implementation-Version': archiveVersion
    }
}

repositories {
    mavenCentral()
}

dependencies {
	compile group: 'net.java.dev.jna', name: 'jna', version: '4.2.1'
	compile group: 'net.java.dev.jna', name: 'platform', version: '3.5.2'
    compileOnly 'org.projectlombok:lombok:1.18.16'
    annotationProcessor 'org.projectlombok:lombok:1.18.16'

    testCompile group: 'junit', name: 'junit', version: '4.+'
    testCompileOnly 'org.projectlombok:lombok:1.18.16'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.16'
}

test {
    testLogging {
        events 'started', 'passed'
    }
    exclude 'org/icmp4j/platform/linux/LinuxNativeBridgeTest.class'
}

// Test Structure

task runTestsRoot(type: Test, dependsOn: testClasses) {
    testLogging {
        events 'started', 'passed'
    }

    include 'org/icmp4j/platform/linux/*.class'

    executable = 'sudo'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

task lol {
	println System.getenv("JAVA_HOME")
	println System.properties['java.home']
	def jdkHome = System.getenv("JAVA_HOME")
	println System.properties['java.home']
    doLast {
        if (OperatingSystem.current().isMacOsX()) {
            println("running on OSX")
        } else if (OperatingSystem.current().isLinux()) {
            println("running onLinux");
        }
    }   
}
task fullJar(type: Jar) {
    baseName = project.name + '-all'
    sourceSets { 
        main { 
            java {
                srcDir 'src/main/java'
            }
            resources { 
                srcDir 'src/main/resources/platform/unix/release/' 
                include '*.so'
                include '*.dylib'
            } 
        } 
    }
    destinationDir = file("${buildDir}/libs")
    from sourceSets.main.output
}

task androidJar(type: Jar) {
    description 'minimal jar for android'
    baseName = project.name + '-android'
    destinationDir = file("${buildDir}/libs")
    from sourceSets.main.output
    exclude 'org/icmp4j/platform/java'
    exclude 'org/icmp4j/platform/unix'
    exclude 'org/icmp4j/platform/windows'
    exclude '*.dylib'
    exclude '*.so'
}

jar {
    from sourceSets.main.output
    exclude '*.dylib'
    exclude '*.so'
}

task runRoot (type: Exec, dependsOn: jar) {
    executable 'sudo'
    args  '-l "java -cp junit-4.12.jar:hamcrest-core-1.3.jar:icmp4j.jar -Djava.library.path=. org.junit.runner.JUnitCore org.icmp4j.platform.IcmpTraceRouteUtilTest"'
}
